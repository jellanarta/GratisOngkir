<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"  />
  <alias alias="transparentProxy"  type="Microsoft.Practices.Unity.InterceptionExtension.TransparentProxyInterceptor, Microsoft.Practices.Unity.Interception" />
  <alias alias="typeMatchingRule"  type="Microsoft.Practices.Unity.InterceptionExtension.TypeMatchingRule, Microsoft.Practices.Unity.Interception"/>
  <alias alias="PerHttpRequest" type="Confins.WebLib.CustomLifetimeManager.HttpRequestLifetimeManager, Confins.WebLib"  />

  <container>

    <!-- Session -->
    <register type="AdIns.DataAccess.Session.ISession, AdIns.DataAccess" mapTo="AdIns.DataAccess.Session.EF.EFSession, AdIns.DataAccess" name="TrainingEntitiesSession">
      <constructor>
        <param name="entityConnectionName" type="string" value="TrainingEntitiesSQLConn" />
      </constructor>
    </register>
    <!--END OF SESSION-->

    <!--OBJECT CONTEXT-->
    <register type="AdIns.DataAccess.BaseObjectContext, AdIns.DataAccess" mapTo="Training.DataAccess.Entities.TrainingEntities, Training.DataAccess" name="TrainingEntities">
      <lifetime type="PerHttpRequest" />
      <constructor>
        <param name="session" dependencyType="AdIns.DataAccess.Session.ISession, AdIns.DataAccess" dependencyName="TrainingEntitiesSession" />
        <param name="entityContainerName" type="string" value="TrainingEntities" />
      </constructor>
    </register>
    <!--END OF OBJECT CONTEXT-->

    <!--REPOSITORY-->
    <register type="AdIns.DataAccess.IRepository, AdIns.DataAccess" mapTo="AdIns.DataAccess.EF.EFRepository, AdIns.DataAccess" name="TrainingEntities">
      <constructor>
        <param name="context" dependencyType="AdIns.DataAccess.BaseObjectContext, AdIns.DataAccess" dependencyName="TrainingEntities" />
      </constructor>
    </register>

    <!--END OF REPOSITORY-->
    
    <register type="AdIns.Service.IUnityConfigurer, AdIns.Service" mapTo="Rule.Web.Configurer.ServicesConfigurer, Rule.Web" name="ConfinsServiceConfigurer" >
      <constructor>
        <param name="assemblies" >
          <array>
            <value value="AdIns.Service" />
            <value value="Confins.BusinessService.Common"/>
            <value value="Rule.BusinessService.Common"/>
            <value value="Training.BusinessService"/>
          </array>
        </param>
        <param name="namespaces" >
          <array>
            <value value="AdIns.Service.QueryService" />
            <value value="AdIns.Service.RepositoryService" />
            <value value="Confins.BusinessService.Common"/>
            <value value="Rule.BusinessService.Common"/>
            <value value="Training.BusinessService"/>
          </array>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Service.IUnityConfigurer, AdIns.Service" mapTo="AdIns.Service.QueryService.QueryRegisterer, AdIns.Service" name="ConfinsQueryConfigurer" >
      <constructor>
        <param name="assemblies" >
          <array>
            <value value="AdIns.DataAccess" />
            <value value="Confins.DataAccess.Common"/>
            <value value="Training.DataAccess"/>
          </array>
        </param>
        <param name="namespaces" >
          <array>
            <value value="AdIns.DataAccess.Query" />
            <value value="Confins.DataAccess.Common.QueryPaging"/>
            <value value="Training.DataAccess.QueryPaging"/>
          </array>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Service.IUnityConfigurer, adIns.Service" mapTo="Rule.Web.Configurer.InterfaceConfigurer, Rule.Web" name="TestServiceConfigurer">
      <constructor>
        <param name="assemblies">
          <array>
            <value value="Training.BusinessService"/>
          </array>
        </param>
        <param name="namespaces">
          <array>
            <value value="Training.BusinessService"/>
          </array>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Service.IUnityConfigurer, AdIns.Service" mapTo="Rule.Web.Configurer.GenericLookupConfigurer, Rule.Web" name="ConfinsGenericLookupConfigurer" />

    <!-- service interceptors -->
    <register type="Confins.BusinessService.Common.ServiceCallHandler.IServiceHandler, Confins.BusinessService.Common" mapTo="Confins.WebLib.CallHandler.UserContextCallHandler, Confins.WebLib" name="UserContextCallHandler">
      <property name="Order" value="1" />
    </register>
    <register type="Confins.BusinessService.Common.ServiceCallHandler.IServiceHandler, Confins.BusinessService.Common" mapTo="Confins.BusinessService.Common.ServiceCallHandler.TransactionCallHandler, Confins.BusinessService.Common" name="TransactionCallHandler">
      <property name="Order" value="2" />
      <property name="DefaultBehaviour" value="Required" />
    </register>
    <!-- end of service interceptors -->

  </container>
</unity>

