<?xml version="1.0" encoding="utf-8" ?>
<unity-formatter xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"  />
  <alias alias="transparentProxy"  type="Microsoft.Practices.Unity.InterceptionExtension.TransparentProxyInterceptor, Microsoft.Practices.Unity.Interception" />
  <alias alias="typeMatchingRule"  type="Microsoft.Practices.Unity.InterceptionExtension.TypeMatchingRule, Microsoft.Practices.Unity.Interception"/>
  <alias alias="PerHttpRequest" type="Confins.WebLib.CustomLifetimeManager.HttpRequestLifetimeManager, Confins.WebLib"  />

  <container>
    <!-- TextFormatterHelper -->

    <!-- formatter -->
    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.DateFormatter, AdIns.Util" name="DateFormatter" >
      <constructor>
        <param name="dateFormat" >
          <value value="dd/MM/yyyy"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.DateFormatter, AdIns.Util" name="DateTimeFormatter" >
      <constructor>
        <param name="dateFormat" >
          <value value="dd/MM/yyyy HH:mm:ss"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.Int16Formatter, AdIns.Util" name="Int16Formatter" >
      <constructor>
        <param name="intFormat" >
          <value value="{0:#,0}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.Int32Formatter, AdIns.Util" name="Int32Formatter" >
      <constructor>
        <param name="intFormat" >
          <value value="{0:#,0}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.Int64Formatter, AdIns.Util" name="Int64Formatter" >
      <constructor>
        <param name="intFormat" >
          <value value="{0:#,0}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.NullableInt64Formatter, AdIns.Util" name="NullableInt64Formatter" >
      <constructor>
        <param name="intFormat" >
          <value value="{0:#,0}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.DecimalFormatter, AdIns.Util" name="DecimalFormatter" >
      <constructor>
        <param name="decimalFormat" >
          <value value="{0:#,0.00}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.DecimalFormatter, AdIns.Util" name="PercentFormatter" >
      <constructor>
        <param name="decimalFormat" >
          <value value="{0:#,0.000000}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.DoubleFormatter, AdIns.Util" name="DoubleFormatter" >
      <constructor>
        <param name="doubleFormat" >
          <value value="{0:#,0.00}"/>
        </param>
      </constructor>
    </register>

    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.BooleanFormatter, AdIns.Util" name="BooleanFormatter" />
    <register type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util" mapTo="AdIns.Util.TextFormatter.StringFormatter, AdIns.Util" name="StringFormatter" />
    <!-- end of formatter -->


    <register type="AdIns.Util.TextFormatter.TextFormatterHelper, AdIns.Util" mapTo="AdIns.Util.TextFormatter.TextFormatterHelper, AdIns.Util" >
      <lifetime type="singleton"/>
      <!-- formatter registration -->
      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.DateTime"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="DateFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Int16"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="Int16Formatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Int32"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="Int32Formatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Int64"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="Int64Formatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Nullable`1[System.Int64]"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="NullableInt64Formatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Boolean"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="BooleanFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Double"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="DoubleFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.Decimal"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="DecimalFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="type" type="System.Type">
          <value typeConverter="AdIns.Util.TypeConv.StringToTypeConverter, AdIns.Util" value="System.String"/>
        </param>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="StringFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="pattern" type="System.String" value="dtm"/>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="DateTimeFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>

      <method name="RegisterFormatter">
        <param name="pattern" type="System.String" value="percent"/>
        <param name="formatter" type="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"  dependencyName="PercentFormatter" dependencyType="AdIns.Util.TextFormatter.ITextFormatter, AdIns.Util"/>
      </method>
      <!-- end of formatter registration -->

      <!-- End of TextFormatterHelper -->
    </register>
  </container>
</unity-formatter>

